{"ast":null,"code":"var _jsxFileName = \"/Users/andrewfunk/PycharmProjects/Sandbox/src/screens/LoginScreen.tsx\";\nimport React, { useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport { useNavigation } from '@react-navigation/native';\nimport { useSupabase } from '../services/SupabaseProvider';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function LoginScreen() {\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const supabase = useSupabase();\n  const navigation = useNavigation();\n  const handleLogin = async () => {\n    const {\n      error\n    } = await supabase.auth.signInWithPassword({\n      email,\n      password\n    });\n    if (!error) {\n      navigation.navigate('Dashboard');\n    } else {\n      console.error(error.message);\n    }\n  };\n  const handleSignUpNavigate = () => {\n    navigation.navigate('Signup');\n  };\n  return _jsxDEV(View, {\n    style: styles.container,\n    children: [_jsxDEV(Text, {\n      style: styles.title,\n      children: \"Login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), _jsxDEV(TextInput, {\n      placeholder: \"Email\",\n      value: email,\n      onChangeText: setEmail,\n      style: styles.input\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), _jsxDEV(TextInput, {\n      placeholder: \"Password\",\n      value: password,\n      onChangeText: setPassword,\n      secureTextEntry: true,\n      style: styles.input\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), _jsxDEV(Button, {\n      title: \"Login\",\n      onPress: handleLogin\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), _jsxDEV(View, {\n      style: styles.signUpButton,\n      children: _jsxDEV(Button, {\n        title: \"Sign Up\",\n        onPress: handleSignUpNavigate\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n}\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    padding: 16,\n    backgroundColor: '#f2f2f2'\n  },\n  title: {\n    fontSize: 24,\n    fontWeight: 'bold',\n    color: '#333',\n    marginBottom: 16\n  },\n  input: {\n    width: 'auto',\n    height: 40,\n    borderColor: 'gray',\n    borderWidth: 1,\n    marginBottom: 12,\n    paddingHorizontal: 8,\n    backgroundColor: '#fff'\n  },\n  signUpButton: {\n    marginTop: 16,\n    width: 'auto'\n  }\n});","map":{"version":3,"names":["React","useState","View","TextInput","Button","StyleSheet","Text","useNavigation","useSupabase","jsxDEV","_jsxDEV","LoginScreen","email","setEmail","password","setPassword","supabase","navigation","handleLogin","error","auth","signInWithPassword","navigate","console","message","handleSignUpNavigate","style","styles","container","children","title","fileName","_jsxFileName","lineNumber","columnNumber","placeholder","value","onChangeText","input","secureTextEntry","onPress","signUpButton","create","flex","justifyContent","alignItems","padding","backgroundColor","fontSize","fontWeight","color","marginBottom","width","height","borderColor","borderWidth","paddingHorizontal","marginTop"],"sources":["/Users/andrewfunk/PycharmProjects/Sandbox/src/screens/LoginScreen.tsx"],"sourcesContent":["import React, { useState } from 'react';\nimport { View, TextInput, Button, StyleSheet, Text } from 'react-native';\nimport { useNavigation } from '@react-navigation/native';\nimport { useSupabase } from '../services/SupabaseProvider';\nimport { NativeStackNavigationProp } from '@react-navigation/native-stack';\nimport { RootStackParamList } from '../types'; // Import your RootStackParamList\n\nexport default function LoginScreen() {\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const supabase = useSupabase();\n\n  const navigation = useNavigation<NativeStackNavigationProp<RootStackParamList>>();\n\n  const handleLogin = async () => {\n    const { error } = await supabase.auth.signInWithPassword({ email, password });\n    if (!error) {\n      navigation.navigate('Dashboard'); // Correctly typed navigation\n    } else {\n      console.error(error.message);\n    }\n  };\n\n  const handleSignUpNavigate = () => {\n    navigation.navigate('Signup'); // Correctly typed navigation\n  };\n\n  return (\n    <View style={styles.container}>\n      <Text style={styles.title}>Login</Text>\n      <TextInput\n        placeholder=\"Email\"\n        value={email}\n        onChangeText={setEmail}\n        style={styles.input}\n      />\n      <TextInput\n        placeholder=\"Password\"\n        value={password}\n        onChangeText={setPassword}\n        secureTextEntry\n        style={styles.input}\n      />\n      <Button title=\"Login\" onPress={handleLogin} />\n\n      {/* Wrap Button in a View with the style */}\n      <View style={styles.signUpButton}>\n        <Button title=\"Sign Up\" onPress={handleSignUpNavigate} />\n      </View>\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    padding: 16,\n    backgroundColor: '#f2f2f2',\n  },\n  title: {\n    fontSize: 24,\n    fontWeight: 'bold',\n    color: '#333',\n    marginBottom: 16,\n  },\n  input: {\n    width: 'auto',\n    height: 40,\n    borderColor: 'gray',\n    borderWidth: 1,\n    marginBottom: 12,\n    paddingHorizontal: 8,\n    backgroundColor: '#fff',\n  },\n  signUpButton: {\n    marginTop: 16,\n    width: 'auto', // Make sure the button takes full width\n  },\n});\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}